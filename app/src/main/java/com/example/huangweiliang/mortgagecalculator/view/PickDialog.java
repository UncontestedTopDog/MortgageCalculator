package com.example.huangweiliang.mortgagecalculator.view;import android.content.Context;import android.os.Handler;import android.os.Message;import android.support.v4.widget.NestedScrollView;import android.util.AttributeSet;import android.util.Log;import android.util.TypedValue;import android.view.MotionEvent;import android.view.View;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.RelativeLayout;import android.widget.TextView;import com.example.huangweiliang.mortgagecalculator.R;import com.example.huangweiliang.mortgagecalculator.utils.DisplayUtil;public class PickDialog extends RelativeLayout {    private final int UN_PICK_SIZE = 14;    private final int PICK_SIZE = 20;    private TextView confirm;    private TextView cancle;    private NestedScrollView scrollView;    private TextView[] pickViews;    private int[] pickIds = {R.id.first_item, R.id.second_item, R.id.third_item, R.id.fourth_item,            R.id.fifth_item, R.id.sixth_item, R.id.seventh_item, R.id.eighth_item, R.id.ninth_item};    private int itemHeight = 0;    private int pickItem;    private int pickMaxItem = 9;    private int changeSize;    private int lastY = 0;    private int touchEventId = -9983761;    private int touchEventId2 = -9983762;    private String callMeId ;    private OnPickListener onPickListener;    Handler handler = new Handler() {        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            View scroller = (View) msg.obj;            if (msg.what == touchEventId) {                if (lastY == scroller.getScrollY()) {                    if (scroller.getScrollY() <= 60)                        pickItem = 0;                    else                        pickItem = (scroller.getScrollY() - 60) / itemHeight + 1;                    scroller.scrollTo(0, itemHeight * pickItem);                    handler.sendMessageDelayed(handler.obtainMessage(touchEventId2, scroller), 20);                } else {                    handler.sendMessageDelayed(handler.obtainMessage(touchEventId, scroller), 5);                    lastY = scroller.getScrollY();                }            } else if (msg.what == touchEventId2) {                scroller.scrollTo(0, itemHeight * pickItem);            }        }    };    public PickDialog(Context context) {        super(context);        initView();    }    public PickDialog(Context context, AttributeSet attrs) {        super(context, attrs);        initView();    }    public PickDialog(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        initView();    }    private void initView() {        pickViews = new TextView[pickMaxItem];        inflate(getContext(), R.layout.pick_dialog, this);        scrollView = (NestedScrollView) findViewById(R.id.scroll_view);        confirm = (TextView) findViewById(R.id.confirm);        cancle = (TextView) findViewById(R.id.cancle);        for (int i = 0; i < pickMaxItem; i++)            pickViews[i] = (TextView) findViewById(pickIds[i]);        itemHeight = DisplayUtil.dip2px(getContext(),30);        changeSize = itemHeight / (PICK_SIZE - UN_PICK_SIZE);        pickItem = 4;        scrollView.setOnScrollChangeListener(new NestedScrollView.OnScrollChangeListener() {            @Override            public void onScrollChange(NestedScrollView v, int scrollX, int scrollY, int oldScrollX, int oldScrollY) {                changePickItem(scrollY);            }        });        scrollView.setOnTouchListener(new OnTouchListener() {            @Override            public boolean onTouch(View view, MotionEvent motionEvent) {                if (motionEvent.getAction() == MotionEvent.ACTION_UP) {                    handler.sendMessageDelayed(handler.obtainMessage(touchEventId, scrollView), 5);                }                return false;            }        });        cancle.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View view) {                hide();            }        });        confirm.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View view) {                hide();                onPickListener.OnPick(pickItem,callMeId);            }        });    }    public void hide() {        Animation translate = AnimationUtils.loadAnimation(getContext(), R.anim.up_from_bottom);        translate.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @Override            public void onAnimationEnd(Animation animation) {                setVisibility(GONE);            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });        startAnimation(translate);    }    public void show(final int pickItem, String callMeId){        setVisibility(VISIBLE);        this.pickItem = pickItem;        this.callMeId = callMeId ;        Animation translate = AnimationUtils.loadAnimation(getContext(), R.anim.down_to_bottom);        translate.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @Override            public void onAnimationEnd(Animation animation) {                scrollView.scrollTo(0, itemHeight * pickItem);            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });        startAnimation(translate);    }    private void changePickItem(int scrollY) {        for (int i = 0; i < pickMaxItem; i++) {            pickViews[i].setTextSize(TypedValue.COMPLEX_UNIT_SP, UN_PICK_SIZE);        }        int from = scrollY / itemHeight;        pickViews[from].setTextSize(TypedValue.COMPLEX_UNIT_SP,                PICK_SIZE - (scrollY - from * itemHeight) / changeSize);        if (from < 8) {            int to = from + 1;            pickViews[to].setTextSize(TypedValue.COMPLEX_UNIT_SP,                    UN_PICK_SIZE + (scrollY - from * itemHeight) / changeSize);        }    }    public void setOnPickListener(OnPickListener onPickListener) {        this.onPickListener = onPickListener;    }    public interface OnPickListener{        void OnPick(int pickItem,String callMeId);    }}