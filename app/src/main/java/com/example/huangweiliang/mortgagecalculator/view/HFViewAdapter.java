package com.example.huangweiliang.mortgagecalculator.view;import android.support.v7.widget.RecyclerView;import android.view.View;import android.view.ViewGroup;import com.example.huangweiliang.mortgagecalculator.model.ResultData;import java.util.ArrayList;import java.util.List;public class HFViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {    private RecyclerView.Adapter adapter ;    private List<FixedViewInfo> headerViewInfos = new ArrayList<>();    private List<FixedViewInfo> footerViewInfos = new ArrayList<>();    private RecyclerView.AdapterDataObserver observer = new RecyclerView.AdapterDataObserver() {    };    public HFViewAdapter(RecyclerView.Adapter adapter){        this.adapter = adapter;        if (adapter != null){            adapter.registerAdapterDataObserver(observer);        }    }    @Override    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {        View view = findViewForInfos(viewType);        if (view != null)            return new HFViewHolder(view);        else            return adapter.onCreateViewHolder(parent,viewType);    }    @Override    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {        if (isHeader(position)||isFooter(position))            return;        int adjustPos = position - headerViewInfos.size();        adapter.onBindViewHolder(holder,adjustPos);    }    @Override    public int getItemCount() {        return headerViewInfos.size()+footerViewInfos.size()+(adapter==null?0:adapter.getItemCount());    }    @Override    public int getItemViewType(int position) {        if (isHeader(position))            return headerViewInfos.get(position).itemViewType;        if (isFooter(position))            return footerViewInfos.get(position - headerViewInfos.size() - adapter.getItemCount()).itemViewType;        int adjustPos = position - headerViewInfos.size();        return adapter.getItemViewType(position);    }    private boolean isHeader(int position){        return position < headerViewInfos.size();    }    private boolean isFooter(int position){        return getItemCount() - position <= footerViewInfos.size();    }    public void addHeaderView(View view){        addHeaderView(view,generateUniqueViewType());    }    public void addHeaderView(View view, int viewTyp){        FixedViewInfo fixedViewInfo = new FixedViewInfo();        fixedViewInfo.view = view ;        fixedViewInfo.itemViewType = viewTyp;        headerViewInfos.add(fixedViewInfo);        notifyDataSetChanged();    }    public void addFooterView(View view){        addFooterView(view,generateUniqueViewType());    }    public void addFooterView(View view, int viewTyp){        FixedViewInfo fixedViewInfo = new FixedViewInfo();        fixedViewInfo.view = view ;        fixedViewInfo.itemViewType = viewTyp;        footerViewInfos.add(fixedViewInfo);        notifyDataSetChanged();    }    private int generateUniqueViewType() {        int count = getItemCount();        while (true) {            //生成一个随机数。            int viewType = (int) (Math.random() * Integer.MAX_VALUE) + 1;            //判断该viewType是否已使用。            boolean isExist = false;            for (int i = 0; i < count; i++) {                if (viewType == getItemViewType(i)) {                    isExist = true;                    break;                }            }            //判断该viewType还没被使用，则返回。否则进行下一次循环，重新生成随机数。            if (!isExist) {                return viewType;            }        }    }    public class HFViewHolder extends RecyclerView.ViewHolder{        public HFViewHolder(View itemView) {            super(itemView);        }    }    private class FixedViewInfo{        View view ;        int itemViewType;    }    private View findViewForInfos(int viewType){        for (FixedViewInfo fixedViewInfo : headerViewInfos)            if (fixedViewInfo.itemViewType == viewType)                return fixedViewInfo.view;        for (FixedViewInfo fixedViewInfo : footerViewInfos)            if (fixedViewInfo.itemViewType == viewType)                return fixedViewInfo.view;        return null ;    }    public void setResultDatas(ResultData[][] resultDatas) {        if (adapter instanceof ResultDetailAdapter)            ((ResultDetailAdapter) adapter).setResultDatas(resultDatas);        notifyDataSetChanged();    }}