package com.example.huangweiliang.mortgagecalculator;import android.content.Context;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.text.Html;import android.view.MotionEvent;import android.view.View;import android.view.inputmethod.InputMethodManager;import android.widget.Button;import android.widget.LinearLayout;import android.widget.SeekBar;import android.widget.TextView;import java.util.Locale;public class MortgageActivity extends AppCompatActivity implements ISelectorCallback , IEditTextChangeCallback {    SelectorView morTypeSelector;    SelectorView repayTypeSelector;    LinearLayout composeLayout;    LinearLayout singleLayout;    LinearLayout mainLayout;    UnitEditText singleET;    UnitEditText commercialET;    UnitEditText fundET;    UnitEditText commercialRateET;    TextView fundRateText;    UnitEditText additionET;    TextView rateResult;    TextView mortgageTime;    SeekBar timeSeek;    Button calculator;    TextView commercialStandardRateView;    TextView fundStandardRateView;    private Mortgage mortgage = new Mortgage();    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        initView();        initListener();    }    private void initListener() {        timeSeek.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {            @Override            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {                mortgageTime.setText((i + 1) / 2.0 + "");                mortgage.com.setRepayment((i + 1) / 2 * 12);                mortgage.fund.setRepayment((i + 1) / 2 * 12);            }            @Override            public void onStartTrackingTouch(SeekBar seekBar) {            }            @Override            public void onStopTrackingTouch(SeekBar seekBar) {            }        });        morTypeSelector.setSelectorCallback(this, "mor");        repayTypeSelector.setSelectorCallback(this, "repay");        commercialRateET.setChangeCallback(this,"com");        additionET.setChangeCallback(this,"add");        singleET.setChangeCallback(this,"single");        commercialET.setChangeCallback(this,"com");        fundET.setChangeCallback(this,"fund");        calculator.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                mortgage.calculator();            }        });        mainLayout.setOnTouchListener(mainTouchListener);    }    private void initView() {        composeLayout = findViewById(R.id.compose_repayment_layout);        singleLayout = findViewById(R.id.single_repayment_layout);        morTypeSelector = findViewById(R.id.mortgage_type);        repayTypeSelector = findViewById(R.id.repayment_type);        singleET = findViewById(R.id.single_et);        commercialET = findViewById(R.id.commercial_et);        fundET = findViewById(R.id.provident_fund_et);        mortgageTime = findViewById(R.id.mortgage_time);        timeSeek = findViewById(R.id.time_seek);        commercialRateET = findViewById(R.id.commercial_rate);        fundRateText = findViewById(R.id.fund_rate);        additionET = findViewById(R.id.addition);        rateResult = findViewById(R.id.rate_result);        calculator = findViewById(R.id.calculator);        mainLayout = findViewById(R.id.main_layout);        commercialStandardRateView = findViewById(R.id.commercial_standard_rate);        fundStandardRateView = findViewById(R.id.fund_standard_rate);        final String commercialStandardRate = String.format(Locale.CHINA,                "<font color=\"#414141\">%s</font><font color=\"#e6a531\">%s</font>",                "商业 ", "4.90%");        final String fundStandardRate = String.format(Locale.CHINA,                "<font color=\"#414141\">%s</font><font color=\"#e6a531\">%s</font>",                "公积金 ", "3.25%");        commercialStandardRateView.setText(Html.fromHtml(commercialStandardRate));        fundStandardRateView.setText(Html.fromHtml(fundStandardRate));    }    public void calculatorRate() {        if (additionET.getEdit().getText().toString().equals("") ||                commercialRateET.getEdit().getText().toString().equals(""))            return;        double rate;        double addition = Double.parseDouble(additionET.getEdit().getText().toString());        double result;        String ret;        switch (mortgage.mortgageType) {            case Compose:                rate = Double.parseDouble(commercialRateET.getEdit().getText().toString());                result = rate * addition;                mortgage.com.rate = result / 1200;                ret = String.valueOf(result);                if (ret.length() > 5)                    ret = ret.substring(0, 5);                rateResult.setText("=" + ret + "%");                mortgage.fund.rate = 3.25 / 1200;                break;            case Commercial:                rate = Double.parseDouble(commercialRateET.getEdit().getText().toString());                result = rate * addition;                mortgage.com.rate = result / 1200;                ret = String.valueOf(result);                if (ret.length() > 5)                    ret = ret.substring(0, 5);                rateResult.setText("=" + ret + "%");                break;            case Fund:                rate = 3.25;                result = rate * addition;                mortgage.fund.rate = result / 1200;                ret = String.valueOf(result);                if (ret.length() > 5)                    ret = ret.substring(0, 5);                rateResult.setText("=" + ret + "%");                break;        }    }    @Override    public void onClickFirst(String id) {        switch (id) {            case "mor":                mortgage.mortgageType = Enum.MortgageType.Commercial;                fundRateText.setVisibility(View.GONE);                commercialRateET.setVisibility(View.VISIBLE);                singleLayout.setVisibility(View.VISIBLE);                composeLayout.setVisibility(View.GONE);                calculatorRate();                break;            case "repay":                mortgage.repaymentType = Enum.RepaymentType.AC;                break;        }    }    @Override    public void onClickSecond(String id) {        switch (id) {            case "mor":                mortgage.mortgageType = Enum.MortgageType.Fund;                fundRateText.setVisibility(View.VISIBLE);                commercialRateET.setVisibility(View.GONE);                singleLayout.setVisibility(View.VISIBLE);                composeLayout.setVisibility(View.GONE);                calculatorRate();                break;            case "repay":                mortgage.repaymentType = Enum.RepaymentType.ACPI;                break;        }    }    @Override    public void onClickThird(String id) {        switch (id) {            case "mor":                mortgage.mortgageType = Enum.MortgageType.Compose;                fundRateText.setVisibility(View.GONE);                commercialRateET.setVisibility(View.VISIBLE);                singleLayout.setVisibility(View.GONE);                composeLayout.setVisibility(View.VISIBLE);                calculatorRate();                break;            case "repay":                break;        }    }    @Override    public void onTextChange(String id) {        switch (id){            case "com":            case "add":                calculatorRate();                break;        }    }    @Override    public void onAfterTextChanged(String id) {        switch (id){            case "single":                if (!singleET.getEdit().getText().toString().trim().equals("")){                    mortgage.com.setLoan(Double.valueOf(singleET.getEdit().getText().toString().trim()));                mortgage.fund.setLoan(Double.valueOf(singleET.getEdit().getText().toString().trim()));}                break;            case "com":                if (!commercialET.getEdit().getText().toString().trim().equals(""))                    mortgage.com.setLoan(Double.valueOf(commercialET.getEdit().getText().toString().trim()));                break;            case "fund":                if (!fundET.getEdit().getText().toString().trim().equals(""))                    mortgage.fund.setLoan(Double.valueOf(fundET.getEdit().getText().toString().trim()));                break;        }    }    private View.OnTouchListener mainTouchListener = new View.OnTouchListener() {        @Override        public boolean onTouch(View view, MotionEvent motionEvent) {            InputMethodManager imm = (InputMethodManager) MortgageActivity.this.getSystemService(Context.INPUT_METHOD_SERVICE);            imm.hideSoftInputFromWindow(mainLayout.getWindowToken(), 0);            if (singleET.getEdit().getText().toString().trim().equals(""))                singleET.getEdit().setText(String.valueOf(0));            else if (commercialRateET.getEdit().getText().toString().trim().equals(""))                commercialRateET.getEdit().setText(String.valueOf(0));            else if (additionET.getEdit().getText().toString().trim().equals(""))                additionET.getEdit().setText(String.valueOf(0));            return false;        }    };}